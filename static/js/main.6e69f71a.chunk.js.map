{"version":3,"sources":["components/Home.js","components/Detail.js","components/App.js","index.js"],"names":["ALL_DRINKS","gql","Home","props","useState","category","setCategory","useQuery","variables","loading","error","data","useEffect","window","scrollTo","onClick","event","allDrinks","map","drink","index","key","to","id","name","src","url","width","GET_DRINK","Detail","Drink","wdith","App","path","client","ApolloClient","uri","render","document","getElementById"],"mappings":"8dAKA,IAAMA,EAAaC,YAAH,KAyCDC,EA/BF,SAAAC,GAAU,IAAD,EACYC,mBAAS,YADrB,mBACbC,EADa,KACHC,EADG,OAEaC,YAASP,EAAY,CACpDQ,UAAW,CAAEH,cADPI,EAFY,EAEZA,QAASC,EAFG,EAEHA,MAAOC,EAFJ,EAEIA,KAMxB,OAHAC,oBAAU,WACRC,OAAOC,SAAS,EAAE,KAEhBL,EAAgB,wCAChBC,EAAc,sCAAYA,GAE5B,6BACE,wCACA,4BAAQK,QAAS,SAAAC,GAAK,OAAIV,EAAY,cAAtC,YACA,4BAAQS,QAAS,SAAAC,GAAK,OAAIV,EAAY,UAAtC,QACA,4BAAQS,QAAS,SAAAC,GAAK,OAAIV,EAAY,YAAtC,UACA,4BAAQS,QAAS,SAAAC,GAAK,OAAIV,EAAY,WAAtC,UACA,oCACCK,EAAKM,UAAUC,IAAI,SAACC,EAAOC,GAAR,OAClB,6BACE,kBAAC,IAAD,CAAMC,IAAKD,EAAOE,GAAE,kBAAaH,EAAMI,KACpCJ,EAAMK,MAET,6BACA,yBAAKC,IAAG,UAAKN,EAAMO,KAAOC,MAAM,a,yMClC1C,IAAMC,EAAY3B,YAAH,KAqCA4B,EAzBA,SAAA1B,GAAU,IACfoB,EAAOpB,EAAPoB,GADc,EAEWhB,YAASqB,EAAW,CACnDpB,UAAW,CAAEe,QADPd,EAFc,EAEdA,QAASC,EAFK,EAELA,MAAOC,EAFF,EAEEA,KAGxB,GAAIF,EAAS,OAAO,wCACpB,GAAIC,EAAO,OAAO,sCAAYA,GAC9B,IAAMS,EAAQR,EAAKmB,MACnB,OACE,6BAEI,6BACE,yBAAKL,IAAG,UAAKN,EAAMO,KAAOK,MAAM,QAChC,qCACA,6BAAMZ,EAAMK,MACZ,wCACA,6BAAML,EAAMd,UAAe,6BAC3B,6BAAK,kBAAC,IAAD,CAAMiB,GAAG,KAAT,iBACL,gCCpBKU,EAVH,kBACV,6BACE,iDACA,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAMC,KAAK,MACX,kBAAC,EAAD,CAAQA,KAAK,kBCHbC,EAAS,IAAIC,IAAa,CAC9BC,IAAK,oDAEPC,iBACE,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,kBAAC,EAAD,OAEFI,SAASC,eAAe,U","file":"static/js/main.6e69f71a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst ALL_DRINKS = gql`\n  query drinks($category: DrinkCategory) {\n    allDrinks(category: $category) {\n      id\n      name\n      url\n    }\n  }\n`;\n\nconst Home = props => {\n  const [category, setCategory] = useState(\"COCKTAIL\");\n  const { loading, error, data } = useQuery(ALL_DRINKS, {\n    variables: { category }\n  });\n  useEffect(()=>{\n    window.scrollTo(0,0);\n  })\n  if (loading) return <div>loading</div>;\n  if (error) return <div>error:{error}</div>;\n  return (\n    <div>\n      <h3>Category</h3>\n      <button onClick={event => setCategory(\"COCKTAIL\")}>cocktail</button>\n      <button onClick={event => setCategory(\"BEER\")}>beer</button>\n      <button onClick={event => setCategory(\"COFFEE\")}>coffee</button>\n      <button onClick={event => setCategory(\"OTHER\")}>others</button>\n      <h3>List</h3>\n      {data.allDrinks.map((drink, index) => (\n        <div>\n          <Link key={index} to={`/detail/${drink.id}`}>\n            {drink.name}\n          </Link>\n          <br />\n          <img src={`${drink.url}`} width=\"100\" />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\n\nconst GET_DRINK = gql`\n  query drink($id: ID!) {\n    Drink(id: $id) {\n      id\n      name\n      url\n      category\n      instructions\n    }\n  }\n`;\n\nconst Detail = props => {\n  const { id } = props;\n  const { loading, error, data } = useQuery(GET_DRINK, {\n    variables: { id }\n  });\n  if (loading) return <div>loading</div>;\n  if (error) return <div>error:{error}</div>;\n  const drink = data.Drink;\n  return (\n    <div>\n      {\n        <div>\n          <img src={`${drink.url}`} wdith=\"200\" />\n          <h4>title</h4>\n          <div>{drink.name}</div>\n          <h4>category</h4>\n          <div>{drink.category}</div><br />\n          <div><Link to=\"/\">back to home</Link></div>\n          <br />\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\nimport Home from \"./Home\";\nimport Detail from \"./Detail\";\nimport { Router } from \"@reach/router\";\n\nconst App = () => (\n  <div>\n    <h2>Liquor Search App</h2>\n    <Router>\n      <Home path=\"/\" />\n      <Detail path=\"detail/:id\" />\n    </Router>\n  </div>\n);\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport ApolloClient from \"apollo-boost\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nconst client = new ApolloClient({\n  uri: \"https://liquor-graphql-server.glitch.me/graphql\"\n});\nrender(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}